/* SPDX-License-Identifier: (MIT OR MPL-2.0) */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id        String   @id @default(cuid())
  question  String
  createdAt DateTime @default(now())
  options   Option[]
}

model Option {
  id     String @id @default(cuid())
  label  String
  pollId String
  poll   Poll   @relation(fields: [pollId], references: [id])
  votes  Vote[]
}

model Vote {
  id           String   @id @default(cuid())
  pollId       String
  optionId     String
  voterProofId String
  proofHash    String
  createdAt    DateTime @default(now())
  option       Option   @relation(fields: [optionId], references: [id])

  @@unique([pollId, voterProofId])
}

model SlackTeam {
  id          String   @id
  accessToken String
  botUserId   String
  teamName    String
  installedAt DateTime @default(now())
}

model DbtVoteMetric {
  id            String   @id @default(cuid())
  voteId        String   @unique
  pollId        String
  voterId       String
  deltaLogic    Float
  deltaTemporal Float
  divergence    Float
  verdict       String
  reasons       Json
  createdAt     DateTime @default(now())

  @@index([pollId])
  @@index([voterId])
}

model DbtIntegrity {
  id               String   @id @default(cuid())
  voterId          String
  scope            String
  integrity        Float
  interactionCount Int
  avgDivergence    Float
  updatedAt        DateTime @default(now())

  @@unique([voterId, scope])
}
