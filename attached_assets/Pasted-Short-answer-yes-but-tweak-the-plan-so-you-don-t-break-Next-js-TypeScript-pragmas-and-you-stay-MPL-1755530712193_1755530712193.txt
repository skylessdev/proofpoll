Short answer: yes, but tweak the plan so you don’t break Next.js/TypeScript pragmas and you stay MPL-correct. Use SPDX headers instead of big boilerplates, and place them safely.

What to change
	•	Use SPDX: SPDX-License-Identifier: (MIT OR MPL-2.0)
This satisfies MPL 2.0’s file-notice intent, is tooling-friendly, and keeps files clean.
	•	Preserve “must-be-first” pragmas:
	•	Keep shebangs (#!/usr/bin/env node) first.
	•	Keep 'use client' / 'use server' first line in Next.js files.
	•	Keep /* eslint-disable */, // @ts-nocheck, and @jsxImportSource at the very top.
	•	Insert the SPDX line immediately after those, not before.
	•	Comment styles by file type:
	•	TS/JS/TSX/JSX/CSS: /* SPDX-License-Identifier: (MIT OR MPL-2.0) */
	•	Prisma (.prisma): // SPDX-License-Identifier: (MIT OR MPL-2.0)
	•	SQL: -- SPDX-License-Identifier: (MIT OR MPL-2.0)
	•	Skip: node_modules, .next, .vercel, build, dist, coverage, prisma/migrations/**, *.d.ts, *.map, *.min.*, images, JSON/YAML, Markdown, LICENSE files.
	•	Idempotent: if file already contains SPDX-License-Identifier or “Dual licensed”, don’t add again.
	•	Dry-run mode: show the diff count before writing.

Header text to insert (by language)
	•	TS/JS/TSX/JSX/CSS:

/* SPDX-License-Identifier: (MIT OR MPL-2.0) */


	•	Prisma:





// SPDX-License-Identifier: (MIT OR MPL-2.0)

- SQL:

– SPDX-License-Identifier: (MIT OR MPL-2.0)

## Safe insertion rules (pseudocode)
1. Read file lines.
2. Find the first line index **after** any of:
 - shebang
 - `'use client'` / `'use server'`
 - `/* eslint-disable */`, `// @ts-...`
 - `/** @jsxImportSource ... */`
3. If header already present → skip.
4. Insert SPDX line at that index.

---

## Prompt for Replit Agent (copy/paste)

**Task: Add SPDX dual-license headers safely across the codebase**

**Goal**
- Add `SPDX-License-Identifier: (MIT OR MPL-2.0)` to source files using correct comment syntax and safe placement.
- Do not break Next.js/TS pragmas.

**Guardrails**
- Don’t modify app logic.
- Preserve top-of-file pragmas: shebangs, `'use client'|'use server'`, eslint/ts pragmas, jsx import source.
- Skip generated/vendor folders: `node_modules`, `.next`, `.vercel`, `build`, `dist`, `coverage`, and `prisma/migrations/**`.
- Skip non-code: `*.json`, `*.yml`, `*.yaml`, `*.md`, images, LICENSE files.

**Files to target**
- `app/**/*.{ts,tsx,js,jsx,css}`
- `lib/**/*.{ts,tsx,js,jsx}`
- `utils/**/*.{ts,tsx,js,jsx}`
- `prisma/**/*.prisma`
- `**/*.sql`

**Header strings**
- TS/JS/TSX/JSX/CSS: `/* SPDX-License-Identifier: (MIT OR MPL-2.0) */`
- Prisma: `// SPDX-License-Identifier: (MIT OR MPL-2.0)`
- SQL: `-- SPDX-License-Identifier: (MIT OR MPL-2.0)`

**Implementation**
1) Create `scripts/add-headers.mjs` that:
 - Walks the target globs.
 - Detects existing SPDX or “Dual licensed” → skip.
 - Computes safe insertion index (after shebang, `'use client'/'use server'`, eslint/ts pragmas, jsx import source).
 - Inserts the correct comment form.
 - Supports `--dry-run` (prints file count) and `--write` (applies changes).
2) Add npm scripts:
 ```json
 {
   "scripts": {
     "license:dry": "node scripts/add-headers.mjs --dry-run",
     "license:write": "node scripts/add-headers.mjs --write"
   }
 }

	3.	Run npm run license:dry, show count; then npm run license:write.
	4.	Update README’s License section (keep existing text) to explicitly state: “Files include SPDX-License-Identifier: (MIT OR MPL-2.0) headers.”

Acceptance Criteria
	•	Headers added only where missing; no broken pragmas (verify a 'use client' page still runs).
	•	Show: file count updated, a couple of before/after samples, and git diff --stat.
	•	CI/build still passes (npm run build).

⸻

If you want, I can also drop in the exact Node script for add-headers.mjs.